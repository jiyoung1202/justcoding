"""
Django settings for django_jwt_exam project.

Generated by 'django-admin startproject' using Django 2.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import datetime
import os
import pymysql

pymysql.install_as_MySQLdb()

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'k7h-li!^(8p!#&&n9l&kj(+d3so18%4krn7wue$kwvcd-&c&dh'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True # True 이면 개발 모드,  실제 배포할 때는 운영 모드로 바꾸시오.

#corsheader 하면서 추가하라고 해서 추가함.
ALLOWED_HOSTS = ['127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
    'languages',
    'login1',
    # 'django.core.urlresolvers'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'django_jwt_exam.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_jwt_exam.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    # }
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'banddb',
        'USER': 'root',
        'PASSWORD': '9699',
        'HOST': '127.0.0.1',
        'PORT': '3306',
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

# USE_TZ = True
USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'

REST_FRAMEWORK = {

    # 무슨 사이트 보고 따라했던 JWT
    # 'DEFAULT_PERMISSION_CLASSES' : ('rest_framework.permissions.IsAuthenticated',),
    # 'DEFAULT_AUTHENTICATION_CLASSES' : (
    #     'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
    #     'rest_framework.authentication.SessionAuthentication',
    #     'rest_framework.authentication.TokenAuthentication',
    #     'rest_framework.authentication.BasicAuthentication',

        #여기부터 동영상 4
    #    'rest_framework_simplejwt.authentication.JWTAuthentication',
    # ),

    # 여기부터 동영상 3
    # 'DEFAULT_PERMISSION_CLASSES' : ('rest_framework.permissions.IsAuthenticatedOrReadOnly',)
    # 'DEFAULT_PERMISSION_CLASSES' : ('rest_framework.permissions.AllowAny',)
    # 'DEFAULT_PERMISSION_CLASSES' : ('rest_framework.permissions.IsAuthenticated',),

    # 여기부터 동영상 4
    # 여기를 설정해 놓으면 JWT 토큰이 있어야만함. create superuser로 로그인 해도 안됨.
    # "detail": "Authentication credentials were not provided." 라고 뜸.
    # 'DEFAULT_AUTHENTICATION_CLASSES' : ('rest_framework_simplejwt.authentication.JWTAuthentication',),
}

# 여기는 문서
# JWT_AUTH = {
#     'JWT_AUTH_HEADER_PREFIX': 'JWT',
#     'JWT_EXPIRATION_DELTA': datetime.timedelta(seconds=300)
# }

# django와 vue를 연동하기 위해서 django-cors-header를 깔고,
# INSTALLED_APPS에 'corsheaders'를 추가했고,
# 그 다음에 아래의 것들을 추가했음.
CORS_ORIGIN_ALLOW_ALL = True



# 회원가입 폼 만들기 실전편 책에서.
# LOGIN_REDIRECT_URL: 장고의 기본 로그인 뷰인 CONTRIB.AUTH.LOGIN() 뷰는 로그인 처리가 성공한 후에 NEXT 파라미터로 지정한 URL로 리다이렉트 시킵니다.
# 만일 NEXT 파라미터가 지정되어 있지 않음녀 이 항목에서 지정한 URL로 리다이렉트 시킵니다.
# 만일 settings.py 파일에 이 항목을 지정하지 않으면 디폴트로  /accounts/profile/ URL 을 사용합니다.
# 이 항목도 login_required() 데코레이터에서 사용한다는 점을 유의하기 바랍니다.
# LOGIN_REDIRECT_URL = '/signin'
